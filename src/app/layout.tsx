import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@mantine/core/styles.css";
import "./globals.css";
import theme from "./theme";
import { MantineProvider, ColorSchemeScript } from "@mantine/core";
import dynamic from "next/dynamic";
import Background from "@/components/background/Background";

const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Portfolio amora",
  description: "Generated by create next app",
};



const DEFAULT_SCHEME: "light" | "dark" | "auto" = "auto";

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html
      lang="en"
      data-mantine-color-scheme={
        DEFAULT_SCHEME === "auto" ? "light" : DEFAULT_SCHEME
      }
      suppressHydrationWarning
    >
      <head>
        <ColorSchemeScript defaultColorScheme={DEFAULT_SCHEME} />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <MantineProvider
          defaultColorScheme={DEFAULT_SCHEME}
          theme={theme}
        >
          <div
            style={{
              position: "fixed",
              inset: 0,
              width: "100vw",
              height: "100vh",
              zIndex: -1,
            }}
          >
            <Background />
          </div>
          {children}
        </MantineProvider>
      </body>
    </html>
  );
}
